{"ast":null,"code":"const express = require('express');\nconst mysql = require('mysql');\nconst bodyParser = require('body-parser');\nconst cors = require('cors');\nconst app = express();\nconst port = 8000;\napp.use(cors());\napp.use(bodyParser.json());\n\n// MySQL connection\nconst db = mysql.createConnection({\n  host: 'projectdb.cb8m028o254n.us-east-1.rds.amazonaws.com',\n  user: 'admin',\n  password: 'adminadmin',\n  database: 'user_db'\n});\ndb.connect(err => {\n  if (err) {\n    console.error('Eroare la conectarea la MySQL:', err);\n    return;\n  }\n  console.log('Conectat la MySQL');\n});\n\n// Register endpoint\napp.post('/register', (req, res) => {\n  const {\n    email,\n    username,\n    password\n  } = req.body;\n  const query = 'INSERT INTO users (email, username, password) VALUES (?, ?, ?)';\n  db.query(query, [email, username, password], (err, result) => {\n    if (err) {\n      return res.status(500).send('Eroare la înregistrarea utilizatorului');\n    }\n    res.send('Înregistrare cu succes');\n  });\n});\n\n// Login endpoint\napp.post('/login', (req, res) => {\n  const {\n    username,\n    password\n  } = req.body;\n  const query = 'SELECT * FROM users WHERE username = ? AND password = ?';\n  db.query(query, [username, password], (err, results) => {\n    if (err) {\n      return res.status(500).send('Eroare la autentificare');\n    }\n    if (results.length > 0) {\n      res.send('Autentificare cu succes');\n    } else {\n      res.status(401).send('Date de autentificare invalide');\n    }\n  });\n});\n\n// Add product endpoint\napp.post('/add-product', (req, res) => {\n  const {\n    userId,\n    productName,\n    productUrl\n  } = req.body;\n  const query = 'INSERT INTO user_products (user_id, product_name, product_url) VALUES (?, ?, ?)';\n  db.query(query, [userId, productName, productUrl], (err, result) => {\n    if (err) {\n      return res.status(500).send('Eroare la adăugarea produsului');\n    }\n    res.send('Produs adăugat cu succes');\n  });\n});\napp.listen(port, () => {\n  console.log(`Serverul rulează la http://0.0.0.0:${port}`);\n});","map":{"version":3,"names":["express","require","mysql","bodyParser","cors","app","port","use","json","db","createConnection","host","user","password","database","connect","err","console","error","log","post","req","res","email","username","body","query","result","status","send","results","length","userId","productName","productUrl","listen"],"sources":["/home/priut/Documents/MasterAn1Sem2/CC/Proiect/react-frontend/ccproject-front/src/components/Login.js"],"sourcesContent":["const express = require('express');\nconst mysql = require('mysql');\nconst bodyParser = require('body-parser');\nconst cors = require('cors');\n\nconst app = express();\nconst port = 8000;\n\napp.use(cors());\napp.use(bodyParser.json());\n\n// MySQL connection\nconst db = mysql.createConnection({\n  host: 'projectdb.cb8m028o254n.us-east-1.rds.amazonaws.com',\n  user: 'admin',\n  password: 'adminadmin',\n  database: 'user_db'\n});\n\ndb.connect(err => {\n  if (err) {\n    console.error('Eroare la conectarea la MySQL:', err);\n    return;\n  }\n  console.log('Conectat la MySQL');\n});\n\n// Register endpoint\napp.post('/register', (req, res) => {\n  const { email, username, password } = req.body;\n  const query = 'INSERT INTO users (email, username, password) VALUES (?, ?, ?)';\n  db.query(query, [email, username, password], (err, result) => {\n    if (err) {\n      return res.status(500).send('Eroare la înregistrarea utilizatorului');\n    }\n    res.send('Înregistrare cu succes');\n  });\n});\n\n// Login endpoint\napp.post('/login', (req, res) => {\n  const { username, password } = req.body;\n  const query = 'SELECT * FROM users WHERE username = ? AND password = ?';\n  db.query(query, [username, password], (err, results) => {\n    if (err) {\n      return res.status(500).send('Eroare la autentificare');\n    }\n    if (results.length > 0) {\n      res.send('Autentificare cu succes');\n    } else {\n      res.status(401).send('Date de autentificare invalide');\n    }\n  });\n});\n\n// Add product endpoint\napp.post('/add-product', (req, res) => {\n  const { userId, productName, productUrl } = req.body;\n  const query = 'INSERT INTO user_products (user_id, product_name, product_url) VALUES (?, ?, ?)';\n  db.query(query, [userId, productName, productUrl], (err, result) => {\n    if (err) {\n      return res.status(500).send('Eroare la adăugarea produsului');\n    }\n    res.send('Produs adăugat cu succes');\n  });\n});\n\napp.listen(port, () => {\n  console.log(`Serverul rulează la http://0.0.0.0:${port}`);\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}